
@{
    ViewBag.Title = "Chat";
}

<h2>Chat</h2>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>
@section scripts{
    <!--Script references.-->
    <!--The jquery library is required and is referenced by default in layout.cshtml-->
    <!--Reference the SingleR library.-->
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>

    <!--Reference the autogenerated SingleR hub script.-->
    <script src="~/singler/hubs"></script>

    <!--SingleR script to update the chat page and send messages -->
    <script>
        $(function () {
            //Reference the auto generated proxy for hub.
            var chat = $.connection.myHub1;
            //Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                //Add the message to the page
                $('#discussion').append('<li><strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            //Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            //Set intial forcus to message input box.
            $('#message').focus();
            //start the connection.

            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    //call the send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());

                    //clear text box and reset forcus for next comment.
                    $('#message').val('').focus();
                });
            });

        });
        // This optional function html-encodes message for display in the page.

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}